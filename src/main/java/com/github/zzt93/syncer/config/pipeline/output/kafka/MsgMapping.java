package com.github.zzt93.syncer.config.pipeline.output.kafka;

import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.common.serialization.StringSerializer;

import java.util.Map;

/**
 * @author zzt
 */
public class MsgMapping {

  private String topic;
  private String key;
  private String value;
  /**
   * Serializer class for keys.
   */
  private Class<?> keySerializer = StringSerializer.class;

  /**
   * Serializer class for values.
   */
  private Class<?> valueSerializer = StringSerializer.class;

  /**
   * Compression type for all data generated by the producer.
   */
  private String compressionType;

  public void buildProperties(Map<String, Object> properties) {
    if (compressionType != null) {
      properties.put(ProducerConfig.COMPRESSION_TYPE_CONFIG, compressionType);
    }
    if (keySerializer != null) {
      properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, keySerializer);
    }
    if (valueSerializer != null) {
      properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, valueSerializer);
    }
  }

  public String getTopic() {
    return topic;
  }
}
