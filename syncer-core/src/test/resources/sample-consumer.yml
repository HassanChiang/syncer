version: 1.2

consumerId: sample1


input:
  masters:
    - connection:
        address: 192.168.1.100
        port: 1234
      scheduler: mod
      repos:
        - name: "test_*"
          entities:
          - name: affair
            fields: [id, name] # default id is not null, other can be null
          - name: file
            fields: [id, name, uploader]
          - name: folder
            fields: [id, name, uploader]
        - name: "simple"
          entities:
          - name: test
            fields: [id, test]

    - connection:
        address: 192.168.1.100
        port: 1235
      repos:
        - name: "*_test"
          entities:
          - name: affair
            fields: [id, name]
          - name: file
            fields: [id, name, uploader]
          - name: folder
            fields: [id, name, uploader]

# input result class: com.github.zzt93.syncer.common.data.SyncData
#{
#  repo: xxx
#  entity: xxx
#  id: xid
#  field: {
#    id: xid
#    ...
#  }
#  extra: {
#    ...
#  }
#}

filter:
  - switcher:
      switch: "table"
      case: # support default branch
        "affair": ["#suffix = '-' + row['id']","#type = 'INDEX_AFFAIR'", "renameField('xx', 'yy')" ]
        "file": ["#suffix = '-' + row['id']","#type = 'INDEX_FILE'", "addRow('type', '0')"]
        "folder": ["#suffix = '-' + row['id']","#type = 'INDEX_FILE'", "addRow('type', '1')"]
  - statement: [ "#tags = row['tags']", "updateField('tags', new java.util.ArrayList())", "removeFields('id', 'xid')"]
  - foreach:
      var: "tag"
      in: "#tags?.split('\n')"
      statement: ["#map = new java.util.HashMap()", "#map.put('des', #tag)", "row.get('tags').add(#map)"]
  - if:
      condition: "table == 'affair'"
      ifBody:
        create:
          copy: [row]
          postCreation: ["table = 'role'", "row['id']"]
      elseBody:
        drop: {}

# filter result class: com.github.zzt93.syncer.common.data.SyncData
#{
#  repo: xxx
#  entity: xxx
#  id: xid
#  field: {
#    id: xid
#    ...
#  }
#  extra: {
#    ...
#  }
#}

# Special expression
# "field.*"
# "field.*.flatten"
# "extra.*"
# "extra.*.flatten"

output:
  http:
    connection:
      address: 192.168.1.100
      port: 9700
    jsonMapping:
      "data":
        "parentId": "row['parent_id']"
        "superId": "row['superid']"
        "allianceId": "row['id']"
        "row.*": "row.*.flatten"
      "type": "extra['type']"

