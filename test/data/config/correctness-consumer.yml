version: 1.2

consumerId: correctness


input:
  masters:
    - connection:
        address: ${MYSQL_ADDR}
        port: 3306
      scheduler: mod
      repos:
        - name: "test.*"
          entities:
          - name: correctness
            fields: [time, news_id, currency, total, quantity, type, name, unit] # default id is not null, other can be null
          - name: types
            fields: [tinyint, long, char, varchar, text, decimal, double, timestamp]
          - name: news
            fields: [title, content, thumb_content, tags, affair_id, modify_time, plate_type, state, alliance_id, number, plate_sub_type]
        - name: "simple"
          entities:
          - name: types
            fields: [tinyint, long, char, varchar, text, decimal, double, timestamp]



filter:
  - statement: ["#suffix=''"]
  - switcher:
      switch: "table"
      case: # support default branch
        "news":
        - if:
            condition: "isWrite()"
            ifBody:
            - statement: ["addField('roles', new ArrayList())"]
        - statement: ["#suffix = '-' + getField('alliance_id')/100",
                      "renameField('affair_id','affairId').renameField('modify_time','modifyTime').renameField('thumb_content', 'thumbContent')
          .renameField('plate_type', 'plateType').renameField('plate_sub_type', 'plateSubType').renameField('target_id', 'targetId')",
                      "updateField('content', T(SyncUtil).fromJson(new String(getField('content')),T(Map))['blocks'].![text])",
                      "updateField('thumbContent', new String(getField('thumbContent')))"]
        - if:
            condition: "isUpdate() && containField('title')"
            ifBody:
            - create:
                copy: ["id", "result.fields['alliance_id']", "result.fields['title']"]
                postCreation: ["entity = 'correctness'", "#docType='correctness'", "renameField('title', 'fromName').addField('type', 0)","syncByQuery().filter('newsId', id)", "id=null"]

        "types":
        - statement: ["#suffix = '-' + getField('tinyint')", ]
        "correctness":
        - statement: ["renameField('news_id', 'newsId')"]




# Special expression
# "field.*"
# "field.*.flatten"
# "extra.*"
# "extra.*.flatten"

output:
  elasticsearch:
    connection:
      clusterName: ${ES_CLUSTER}
      clusterNodes: ["${ES_ADDR}:9300"]
    requestMapping: # mapping from input data to es request
      enableExtraQuery: true
      retryOnUpdateConflict: 3
      index: "repo + #suffix" # default: repo
      documentId: "id" # default: id
      fieldsMapping: # default: fields.*.flatten
        "fields": "fields.*.flatten"
    batch:
      size: 100
      delay: 1000
      maxRetry: 5
    refreshInMillis: 0
    failureLog:
      countLimit: 1000
  mysql:
    connection:
      address: ${MYSQL_ADDR}
      port: 3306
      user: simu
      password: simu123
    rowMapping:
      schema: "'test'"
      table: "entity + '_bak'"
      id: "id"
      rows:
        "fields": "fields.*.flatten"
    batch:
      size: 100
      delay: 100
      maxRetry: 5
    failureLog:
      countLimit: 1000