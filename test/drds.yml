version: '2.1'
services:
  mysql0:
    image: mysql:5.7
    container_name: mysql_0
    ports:
    - "43306:3306"
    command: --init-file /init.sql
    volumes:
    - ${mysql_init_0}:/init.sql
    - ./data:/tmp
    environment:
    - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin -h 'localhost' -u root -proot ping --silent"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
    - dbnet

  mysql1:
    image: mysql:5.7
    container_name: mysql_1
    ports:
    - "43307:3306"
    command: --init-file /init.sql
    volumes:
    - ${mysql_init_1}:/init.sql
    - ./data:/tmp
    environment:
    - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin -h 'localhost' -u root -proot ping --silent"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
    - dbnet

  mysql2:
    image: mysql:5.7
    container_name: mysql_2
    ports:
    - "43307:3306"
    command: --init-file /init.sql
    volumes:
    - ${mysql_init_2}:/init.sql
    - ./data:/tmp
    environment:
    - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin -h 'localhost' -u root -proot ping --silent"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
    - dbnet

  elasticsearch:
    image: elasticsearch:5.6
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
    - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    - bootstrap.memory_local=true
    - cluster.name=test-cluster
    ports:
    - 49200:9200
    - 49300:9300
    networks:
    - dbnet

  mongo:
    image: mongo:3.2
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 12
    command: mongod --smallfiles
    environment:
    - MONGODB_USER="root"
    - MONGODB_PASS="root"
    ports:
    - 47017:27017
    networks:
    - dbnet

  syncer:
    image: syncer:test
    container_name: syncer
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
    - 40000:40000
    volumes:
    - ./data:/data
    environment:
    - ES_ADDR=elasticsearch
    - ES_CLUSTER=test-cluster
    - MYSQL_ADDR=mysql
    - MONGO_ADDR=mongo
    - SYNCER_PRODUCER=/data/config/correctness-producer.yml
    - SYNCER_CONSUMER=/data/config/consumer/
    networks:
    - dbnet

volumes:
  data:
    driver: local

networks:
  dbnet:
    driver: bridge