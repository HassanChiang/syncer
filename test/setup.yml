version: '2.1'
services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
    - "43306:3306"
    environment:
    - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin -h 'localhost' -u root -proot ping --silent"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
    - mysqldata:/var/lib/mysql
    networks:
    - dbnet

  elasticsearch:
    image: elasticsearch:6.1
    container_name: elasticsearch
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
    - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    - bootstrap.memory_local=true
    - cluster.name=test-cluster
    ports:
    - 49200:9200
    - 49300:9300
    volumes:
    - ./elasticsearch/config/elasticsearch.yml:/etc/elasticsearch/config/elasticsearch.yml
    - ./elasticsearch/config/jvm.options:/etc/elasticsearch/config/jvm.options
    - ./elasticsearch/config/log4j2.properties:/etc/elasticsearch/config/log4j2.properties
    - esdata:/usr/share/elasticsearch/data
    networks:
    - esnet

  mongo:
    image: mongo
    container_name: mongo
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 12
    command: mongod --smallfiles
    environment:
      MONGODB_USER="user"
      MONGODB_PASS="pass"
    ports:
    - 47017:27017
    networks:
    - mongonet

  syncer:
    image: syncer
    cotainer_name: syncer
    depends_on:
      mongo:
        condition: service_healthy
    ports:
    - 40000:40000


volumes:
  mysqldata:
    driver: local
  esdata:
    driver: local

networks:
  esnet:
    driver: bridge
  dbnet:
    driver: bridge